DELIMITER $$
CREATE TRIGGER controllo_inserimento_diagnosi
    BEFORE INSERT ON diagnosi
    FOR EACH ROW
BEGIN
    DECLARE reparto_medico char;
    DECLARE reparto_paziente_attuale char;
    DECLARE reparto_paziente_passato char;
    DECLARE no_errori int;
    no_errori = 0;
    SELECT reparto INTO reparto_medico FROM afferisce WHERE NEW.medico = medico;
    SELECT reparto INTO reparto_paziente_attuale FROM occupa_attualmente WHERE NEW.paziente = paziente;
    FOR reparto_paziente_passato IN
        SELECT reparto 
        FROM ricovero_passato 
        WHERE NEW.paziente = paziente LOOP
            IF (reparto_paziente_passato = reparto_medico ) THEN
                no_errori = 1;
            END IF;
    END LOOP;

    IF (no_errori = FALSE AND reparto_medico != reparto_paziente_attuale) THEN 
        signal sqlstate '45004' set message_text = 'Hai inserito una diagnosi fatta da un medico il cui reparto non è quello in cui è (o è stato) ricoverato il paziente';
    END IF;

    IF(NEW.medico = NEW.paziente) THEN
        signal sqlstate '45005' set message_text = 'Hai inserito lo stesso cf sia per medico che per paziente.';
    END IF;
END$$
DELIMITER ;


DELIMITER $$
CREATE TRIGGER controlla_inserimento_camera
    BEFORE INSERT ON si_trova
    FOR EACH ROW
BEGIN
    DECLARE rep varchar(256);
    SELECT reparto INTO rep FROM camera WHERE NEW.id_camera = id AND reparto = NEW.reparto;
    IF (NEW.reparto != rep) THEN
        signal sqlstate '45002' set message_text = 'Stai tentando di inserire in una camera che non esiste';
    END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER controlla_modifica_camera
    BEFORE UPDATE ON si_trova
    FOR EACH ROW
BEGIN
    DECLARE rep varchar(256);
    SELECT reparto INTO rep FROM camera WHERE NEW.id_camera = id AND NEW.reparto = reparto;
    IF (NEW.reparto != rep) THEN
        signal sqlstate '45002' set message_text = 'Stai tentando di spostare il letto in un reparto che non è il suo';
    END IF;
END$$
DELIMITER ;